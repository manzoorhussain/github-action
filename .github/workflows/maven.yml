name: Java Continuous Integration and Continuous Development

on:
  push:
    branches: [ "main" ]

jobs:
  CheckOut:
    name: Checkout Source Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up JDK 17 Environment
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and Install Dependencies with Maven
        run: mvn clean install

  TestCase:
    name: Running Test Case
    runs-on: ubuntu-latest
    needs: CheckOut  # Ensures the 'test' job runs only after 'CheckOut' job completes

    steps:
      - name: Checkout Source Code for Testing
        uses: actions/checkout@v4

      - name: Set up JDK 17 Environment for Testing
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Unit Tests with Maven
        run: mvn test


  BuildAndPush:
    name: Build And Push Docker Image
    runs-on: ubuntu-latest
    needs: TestCase  # Ensure this job runs only after the 'TestCase' job completes

    steps:
      # Step 1: Checkout the code
      - name: Checkout Source Code for Docker Build
        uses: actions/checkout@v4

      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: github-cation


      # Step 2: Build the Docker image
      - name: Build Docker Image
        run: docker build . -t manzoor2930/github-cation:latest

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 4: Push the Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push manzoor2930/github-cation:latest




